// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GameLibrary.AutomatedTests.Utils
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class CadastroGameFeature : Xunit.IUseFixture<CadastroGameFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CreateGame.feature"
#line hidden
        
        public CadastroGameFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Cadastro Game", "Um usuario registrado com permissao de administrador ARTESP\r\nefetua o cadastro de" +
                    " uma game", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(CadastroGameFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Cadastro Game")]
        [Xunit.TraitAttribute("Description", "Usuario cadastra game")]
        public virtual void UsuarioCadastraGame()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Usuario cadastra game", new string[] {
                        "TesteAutomatizadoCadastroGameSucesso"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("que o usuário acessa a tela de cadastro de games", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 9
 testRunner.And("Clica no link do sistema Sisf TC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 10
 testRunner.And("Clica no link de game", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Campo",
                        "Valor"});
            table1.AddRow(new string[] {
                        "Usuario",
                        "3"});
#line 11
 testRunner.And("Seleciona um Fiscal", ((string)(null)), table1, "E ");
#line 14
 testRunner.And("Clica no botao de Adicionar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Campo",
                        "Valor"});
            table2.AddRow(new string[] {
                        "Terminal",
                        "20"});
            table2.AddRow(new string[] {
                        "Prazo",
                        "3"});
            table2.AddRow(new string[] {
                        "Empresa",
                        "4049"});
            table2.AddRow(new string[] {
                        "Data",
                        "19/10/2100"});
            table2.AddRow(new string[] {
                        "HoraInicio",
                        "10:00"});
            table2.AddRow(new string[] {
                        "HoraFim",
                        "16:32"});
#line 15
 testRunner.And("Preenche os dados da game", ((string)(null)), table2, "E ");
#line 23
 testRunner.When("Clica no botao salvar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 24
 testRunner.Then("Recebe uma mensagem de game Cadastrada com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line 25
 testRunner.And("exclui a programação cadastrada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 26
 testRunner.And("Efetua Saida do Sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                CadastroGameFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                CadastroGameFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
